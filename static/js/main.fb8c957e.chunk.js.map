{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["baseUrl","fetchCoins","fetch","then","res","json","Chart","id","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","data","isLoading","type","series","name","map","price","close","options","chart","width","height","toolbar","show","background","grid","theme","mode","stroke","curve","xaxis","labels","axisTicks","axisBorder","categories","time_close","yaxis","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Container","styled","div","Header","header","Title","h1","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","props","isActive","textColor","Coin","useParams","state","useLocation","fetchCoinInfo","enabled","undefined","infoData","infoLoading","fetchCoinTickers","refetchInterval","tickersData","tickersLoading","priceMatch","useMatch","chartMatch","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","element","CoinList","ul","li","bgColor","Image","img","Coins","slice","coin","src","toLowerCase","Router","basename","GlobalStyles","createGlobalStyle","reset","App","initialIsOpen","client","QueryClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAMA,EAAU,iCAEHC,EAAa,kBACxBC,MAAM,GAAD,OAAIF,EAAJ,WAAqBG,MAAK,SAACC,GAAD,OAASA,EAAIC,W,wBCyD/BC,MA7Cf,YAAwC,IAAvBC,EAAsB,EAAtBA,GAAsB,EACTC,mBAAoB,CAAC,QAASD,IAAK,kBDLjC,SAACA,GAC/B,IAAME,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAOP,MAAM,GAAD,OACPF,EADO,kBACUO,EADV,mCACuCO,EADvC,gBACwDL,IAClEN,MAAK,SAACC,GAAD,OAASA,EAAIC,UCClBU,CAAiBR,MADXS,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,UAGd,OACE,8BACGA,EACC,mBAEA,cAAC,IAAD,CACEC,KAAK,OACLC,OAAQ,CAAC,CAAEC,KAAM,QAASJ,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMK,KAAI,SAACC,GAAD,OAAWA,EAAMC,WAC3DC,QAAS,CACPC,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,KAAM,CAAEF,MAAM,GACdG,MAAO,CAAEC,KAAM,QACfC,OAAQ,CAAEC,MAAO,SAAUT,MAAO,GAClCU,MAAO,CACLC,OAAQ,CAAER,MAAM,GAChBS,UAAW,CAAET,MAAM,GACnBU,WAAY,CAAEV,MAAM,GACpBW,WAAU,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMK,KAAI,SAACC,GAAD,OAAWA,EAAMmB,cACvCvB,KAAM,YAERwB,MAAO,CAAEb,MAAM,GACfc,KAAM,CACJzB,KAAM,WACN0B,SAAU,CAAEC,iBAAkB,CAAC,WAAYC,MAAO,CAAC,EAAG,OAExDC,OAAQ,CAAC,WACTC,QAAS,CAAEC,EAAG,CAAEC,UAAW,SAACC,GAAD,iBAAeA,EAAMC,QAAQ,aChDrDC,I,kBAAAA,EAJf,WACE,OAAO,wC,QCcHC,EAAYC,IAAOC,IAAV,wFAMTC,EAASF,IAAOG,OAAV,mHAONC,EAAQJ,IAAOK,GAAV,+DAEA,qBAAG5B,MAAkB6B,eAG1BC,EAASP,IAAOQ,KAAV,sEAKNC,EAAWT,IAAOC,IAAV,yKAQRS,EAAeV,IAAOC,IAAV,mPAaZU,EAAcX,IAAOY,EAAV,iDAIXC,EAAOb,IAAOC,IAAV,2HAOJa,EAAMd,IAAOQ,KAAV,gQAQE,SAACO,GAAD,OACPA,EAAMC,SAAWD,EAAMtC,MAAM6B,YAAcS,EAAMtC,MAAMwC,aA8I5CC,I,cAAAA,EAjFf,WAAiB,IACPlE,EAAOmE,cAAPnE,GACAoE,EAAUC,cAAVD,MAFM,EAIqCnE,mBACjD,CAAC,OAAQD,IACT,kBH7IyB,SAACA,GAAD,OAC3BL,MAAM,GAAD,OAAIF,EAAJ,kBAAqBO,IAAMJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UG4I1CwE,CAActE,KACpB,CAAEuE,aAAgBC,IAAPxE,IAHCyE,EAJA,EAINhE,KAA2BiE,EAJrB,EAIUhE,UAJV,EAS2CT,mBACvD,CAAC,UAAWD,IACZ,kBH/I4B,SAACA,GAAD,OAC9BL,MAAM,GAAD,OAAIF,EAAJ,oBAAuBO,IAAMJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UG8I5C6E,CAAiB3E,KACvB,CAAEuE,aAAgBC,IAAPxE,EAAkB4E,gBAAiB,MAHlCC,EATA,EASNpE,KAA8BqE,EATxB,EASapE,UAMrBqE,EAAaC,YAAS,cACtBC,EAAaD,YAAS,cAEtBE,EAAUR,GAAeI,EAE/B,OACE,eAAC/B,EAAD,WACE,cAACoC,EAAA,EAAD,UACE,iCACQ,OAALf,QAAK,IAALA,OAAA,EAAAA,EAAOvD,MAAOuD,EAAMvD,KAAOqE,EAAU,aAAH,OAAkBT,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU5D,SAGnE,cAACqC,EAAD,UACE,cAACE,EAAD,WACQ,OAALgB,QAAK,IAALA,OAAA,EAAAA,EAAOvD,MAAOuD,EAAMvD,KAAOqE,EAAU,aAAH,OAAkBT,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU5D,SAGlEqE,EACC,cAAC3B,EAAD,yBAEA,qCACE,eAACE,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOe,QAAP,IAAOA,OAAP,EAAOA,EAAUW,UAEnB,eAAC1B,EAAD,WACE,2CACA,4CAAQe,QAAR,IAAQA,OAAR,EAAQA,EAAUY,aAEpB,eAAC3B,EAAD,WACE,0CACA,4CAAQmB,QAAR,IAAQA,OAAR,EAAQA,EAAaS,OAAOC,IAAIxE,MAAM8B,QAAQ,YAGlD,cAACc,EAAD,iBAAcc,QAAd,IAAcA,OAAd,EAAcA,EAAUe,cACxB,eAAC/B,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaY,kBAEtB,eAAC/B,EAAD,WACE,+CACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaa,mBAGxB,eAAC7B,EAAD,WACE,cAACC,EAAD,CAAKE,SAAyB,OAAfiB,EAAf,SACE,cAAC,IAAD,CAAMU,GAAG,QAAT,qBAEF,cAAC7B,EAAD,CAAKE,SAAyB,OAAfe,EAAf,SACE,cAAC,IAAD,CAAMY,GAAG,QAAT,wBAGH3F,GACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4F,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAO7F,GAAIA,gBC9MhD+C,EAAYC,IAAOC,IAAV,wFAMTC,EAASF,IAAOG,OAAV,mHAON2C,EAAW9C,IAAO+C,GAAV,0BAER7B,EAAOlB,IAAOgD,GAAV,+RAEC,qBAAGvE,MAAkBwE,WAWjB,qBAAGxE,MAAkB6B,eAK9BF,EAAQJ,IAAOK,GAAV,+DAEA,qBAAG5B,MAAkB6B,eAG1BC,EAASP,IAAOQ,KAAV,sEAKN0C,EAAQlD,IAAOmD,IAAV,oFAoDIC,OApCf,WAAkB,IAAD,EACanG,mBAA0B,WAAYP,GAA1De,EADO,EACPA,KAAMC,EADC,EACDA,UAEd,OACE,eAAC,EAAD,WACE,cAACyE,EAAA,EAAD,UACE,mDAEF,cAAC,EAAD,UACE,cAAC,EAAD,6BAEDzE,EACC,cAAC,EAAD,yBAEA,cAACoF,EAAD,iBACGrF,QADH,IACGA,OADH,EACGA,EAAM4F,MAAM,EAAG,KAAKvF,KAAI,SAACwF,GAAD,OACvB,cAAC,EAAD,UACE,eAAC,IAAD,CACEX,GAAIW,EAAKtG,GACToE,MAAO,CACLvD,KAAMyF,EAAKzF,MAHf,UAME,cAACqF,EAAD,CACEK,IAAG,qDAAgDD,EAAKjB,OAAOmB,iBAEhEF,EAAKzF,KATR,cADSyF,EAAKtG,aClEbyG,I,GAAAA,GAXf,WACE,OACE,cAAC,IAAD,CAAeC,SAAS,qBAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOd,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,Y,SCJhCc,GAAeC,YAAH,8NACdC,KAUoB,qBAAGpF,MAAkBwE,WAChC,qBAAGxE,MAAkBwC,aAcnB6C,OAVf,WACE,OACE,qCACE,cAACH,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBI,eAAa,QCnBjCC,GAAS,IAAIC,cAEnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBJ,OAAQA,GAA7B,SACE,cAAC,IAAD,CAAevF,MCVc,CACjCwE,QAAS,UACThC,UAAW,UACXX,YAAa,WDOT,SACE,cAAC,GAAD,UAIN+D,SAASC,eAAe,W","file":"static/js/main.fb8c957e.chunk.js","sourcesContent":["const baseUrl = \"https://api.coinpaprika.com/v1\";\n\nexport const fetchCoins = () =>\n  fetch(`${baseUrl}/coins`).then((res) => res.json());\n\nexport const fetchCoinInfo = (id: string) =>\n  fetch(`${baseUrl}/coins/${id}`).then((res) => res.json());\n\nexport const fetchCoinTickers = (id: string) =>\n  fetch(`${baseUrl}/tickers/${id}`).then((res) => res.json());\n\nexport const fetchCoinHistory = (id: string) => {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${baseUrl}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((res) => res.json());\n};\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface History {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ id }: { id: string }) {\n  const { data, isLoading } = useQuery<History[]>([\"ohlcv\", id], () =>\n    fetchCoinHistory(id)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[{ name: \"price\", data: data?.map((price) => price.close) }]}\n          options={{\n            chart: {\n              width: 500,\n              height: 300,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            theme: { mode: \"dark\" },\n            stroke: { curve: \"smooth\", width: 3 },\n            xaxis: {\n              labels: { show: false },\n              axisTicks: { show: false },\n              axisBorder: { show: false },\n              categories: data?.map((price) => price.time_close),\n              type: \"datetime\",\n            },\n            yaxis: { show: false },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: { y: { formatter: (value) => `$${value.toFixed(2)}` } },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport {\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n  useMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${({ theme }) => theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33.3%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { id } = useParams<string>();\n  const { state } = useLocation();\n\n  const { data: infoData, isLoading: infoLoading } = useQuery<InfoData>(\n    [\"info\", id],\n    () => fetchCoinInfo(id as string),\n    { enabled: id !== undefined }\n  );\n  const { data: tickersData, isLoading: tickersLoading } = useQuery<PriceData>(\n    [\"tickers\", id],\n    () => fetchCoinTickers(id as string),\n    { enabled: id !== undefined, refetchInterval: 5000 }\n  );\n\n  const priceMatch = useMatch(\"/:id/price\");\n  const chartMatch = useMatch(\"/:id/chart\");\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to=\"chart\">Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to=\"price\">Price</Link>\n            </Tab>\n          </Tabs>\n          {id && (\n            <Routes>\n              <Route path=\"price\" element={<Price />} />\n              <Route path=\"chart\" element={<Chart id={id} />} />\n            </Routes>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${({ theme }) => theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${({ theme }) => theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${({ theme }) => theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Image = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { data, isLoading } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>loading...</Loader>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={coin.id}\n                state={{\n                  name: coin.name,\n                }}\n              >\n                <Image\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename=\"Jwlee134.github.io\">\n      <Routes>\n        <Route path=\"/\" element={<Coins />} />\n        <Route path=\"/:id/*\" element={<Coin />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport Router from \"./Router\";\n\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-weight: 300;\n    background-color: ${({ theme }) => theme.bgColor};\n    color: ${({ theme }) => theme.textColor};\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n      <ReactQueryDevtools initialIsOpen />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#44bd32\",\n};\n"],"sourceRoot":""}