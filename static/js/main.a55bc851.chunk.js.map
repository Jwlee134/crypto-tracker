{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["baseUrl","fetchCoins","fetch","then","res","json","isDarkAtom","atom","key","default","Chart","id","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","data","isLoading","isDark","useRecoilValue","type","series","name","map","price","close","options","chart","width","height","toolbar","show","background","grid","theme","mode","stroke","curve","xaxis","labels","axisTicks","axisBorder","categories","time_close","yaxis","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Container","styled","div","Header","header","Title","h1","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","props","isActive","textColor","Coin","useParams","state","useLocation","fetchCoinInfo","enabled","undefined","infoData","infoLoading","fetchCoinTickers","refetchInterval","tickersData","tickersLoading","priceMatch","useMatch","chartMatch","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","element","CoinList","ul","li","cardBgColor","Image","img","Coins","setIsDarkAtom","useSetRecoilState","onClick","prev","slice","coin","src","toLowerCase","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyles","createGlobalStyle","reset","App","initialIsOpen","client","QueryClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a55bc851.chunk.js","sourcesContent":["const baseUrl = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport const fetchCoins = () =>\r\n  fetch(`${baseUrl}/coins`).then((res) => res.json());\r\n\r\nexport const fetchCoinInfo = (id: string) =>\r\n  fetch(`${baseUrl}/coins/${id}`).then((res) => res.json());\r\n\r\nexport const fetchCoinTickers = (id: string) =>\r\n  fetch(`${baseUrl}/tickers/${id}`).then((res) => res.json());\r\n\r\nexport const fetchCoinHistory = (id: string) => {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${baseUrl}/coins/${id}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((res) => res.json());\r\n};\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface History {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ id }: { id: string }) {\r\n  const { data, isLoading } = useQuery<History[]>([\"ohlcv\", id], () =>\r\n    fetchCoinHistory(id)\r\n  );\r\n\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[{ name: \"price\", data: data?.map((price) => price.close) }]}\r\n          options={{\r\n            chart: {\r\n              width: 500,\r\n              height: 300,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            theme: { mode: isDark ? \"dark\" : \"light\" },\r\n            stroke: { curve: \"smooth\", width: 3 },\r\n            xaxis: {\r\n              labels: { show: false },\r\n              axisTicks: { show: false },\r\n              axisBorder: { show: false },\r\n              categories: data?.map((price) => price.time_close),\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: { show: false },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: { y: { formatter: (value) => `$${value.toFixed(2)}` } },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","function Price() {\r\n  return <h1>Price</h1>;\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Routes,\r\n  useLocation,\r\n  useParams,\r\n  useMatch,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${({ theme }) => theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33.3%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { id } = useParams<string>();\r\n  const { state } = useLocation();\r\n\r\n  const { data: infoData, isLoading: infoLoading } = useQuery<InfoData>(\r\n    [\"info\", id],\r\n    () => fetchCoinInfo(id as string),\r\n    { enabled: id !== undefined }\r\n  );\r\n  const { data: tickersData, isLoading: tickersLoading } = useQuery<PriceData>(\r\n    [\"tickers\", id],\r\n    () => fetchCoinTickers(id as string),\r\n    { enabled: id !== undefined, refetchInterval: 5000 }\r\n  );\r\n\r\n  const priceMatch = useMatch(\"/:id/price\");\r\n  const chartMatch = useMatch(\"/:id/chart\");\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to=\"chart\">Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to=\"price\">Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          {id && (\r\n            <Routes>\r\n              <Route path=\"price\" element={<Price />} />\r\n              <Route path=\"chart\" element={<Chart id={id} />} />\r\n            </Routes>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${({ theme }) => theme.cardBgColor};\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n  border: 1px solid white;\r\n  a {\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${({ theme }) => theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${({ theme }) => theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { data, isLoading } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n  const setIsDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleMode = () => setIsDarkAtom((prev) => !prev);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n        <button onClick={toggleMode}>Toggle Mode</button>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>loading...</Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={coin.id}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <Image\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Coins />} />\r\n        <Route path=\"/:id/*\" element={<Coin />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atoms\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-weight: 300;\r\n    background-color: ${({ theme }) => theme.bgColor};\r\n    color: ${({ theme }) => theme.textColor};\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n      <GlobalStyles />\r\n      <Router />\r\n      <ReactQueryDevtools initialIsOpen />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport App from \"./App\";\r\n\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={client}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}